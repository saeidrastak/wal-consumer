<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-configuration SYSTEM
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
    <session-factory>
        <property name="hibernate.dialect">
            org.hibernate.dialect.H2Dialect
        </property>
        <property name="hibernate.connection.driver_class">
            org.h2.Driver
        </property>

        <property name="hbm2ddl.auto">
            create-drop
        </property>
        <property name="hibernate.connection.autocommit">
            false
        </property>
        <property name="hibernate.connection.createDatabaseIfNotExist">
            true
        </property>

        <!-- Minimum number of connections in the connection pool -->
        <property name="hibernate.c3p0.min_size">
            5
        </property>
        <!-- Maximum number of connections in the connection pool -->
        <property name="hibernate.c3p0.max_size">
            100
        </property>
        <!-- The number of milliseconds a client calling getConnection() will wait for a Connection to be checked-in
             or acquired when the pool is exhausted. Zero means wait indefinitely. Setting any positive value will
             cause the getConnection() call to time-out and break with an SQLException after the specified number
             of milliseconds. -->
        <property name="hibernate.c3p0.checkoutTimeout">
            0
        </property>
        <!-- The simplest way to speed up Connection testing is to define a test query with the preferredTestQuery
             parameter. Setting preferredTestQuery will lead to errors as Connection tests fail if the query target
             table does not exist in your database prior to initialization of your DataSource. A table-independent
             query like SELECT 1 can be used to verify the Connection. -->
        <property name="hibernate.c3p0.preferredTestQuery">SELECT 1</property>
        <!-- c3p0 can be configured to test the Connections to minimize the likelihood that your application will see
             broken or "stale" Connections. The most reliable time to test Connections is on check-out. But this is
             also the most costly choice from a client-performance perspective.
             Note: https://www.mchange.com/projects/c3p0-versions/c3p0-0.9.5.2/#hibernate-specific -->
        <property name="hibernate.c3p0.testConnectionOnCheckout">
            true
        </property>
        <!-- If a c3p0 DataSource attempts and fails to acquire a Connection, it will retry up to acquireRetryAttempts
             times. If all attempts fail, any clients waiting for Connections from the DataSource will see an Exception
             indicating that a Connection could not be acquired.
             If this value is less than or equal to zero, c3p0 will keep trying to fetch a Connection indefinitely. -->
        <property name="hibernate.c3p0.acquireRetryAttempts">
            101
        </property>
    </session-factory>
</hibernate-configuration>
